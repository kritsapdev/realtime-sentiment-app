# ชื่อของ Workflow ของเรา
name: Build and Deploy to Cloud Run

# "ตัวจุดชนวน": บอกให้ Workflow นี้ทำงานเมื่อไหร่
on:
  push:
    branches:
      - main # ให้ทำงานทุกครั้งที่มีการ push โค้ดมาที่ branch 'main'

# ตัวแปรที่ใช้ได้ทั้งไฟล์
env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: asia-southeast1 # แก้ไขถ้าคุณใช้ Region อื่น
  SERVICE_NAME: realtime-sentiment-app # ต้องตรงกับชื่อใน main.tf
  REPO_NAME: realtime-sentiment-repo # ต้องตรงกับชื่อใน main.tf

# "ฉาก": กำหนดงานที่จะต้องทำ
jobs:
  deploy:
    name: Deploy to Cloud Run
    # สั่งให้ทำงานบนเครื่องคอมพิวเตอร์เสมือน Ubuntu เวอร์ชันล่าสุด
    runs-on: ubuntu-latest

    # "บทพูด": ขั้นตอนการทำงานทีละสเต็ป
    steps:
      # 1. เช็คเอาท์โค้ด: ดาวน์โหลดโค้ดของเราลงมาที่เครื่องเสมือน
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. ล็อกอินเข้า Google Cloud: ใช้กุญแจที่เราเก็บไว้ใน Secrets
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 3. ติดตั้ง gcloud: เตรียมเครื่องมือสำหรับคุยกับ GCP
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # 4. ตั้งค่า Docker: อนุญาตให้ Docker push image ไปยังโกดังของเรา
      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      # 5. สร้างและ Push Docker Image: ขั้นตอนสร้าง "กล่อง" แอปพลิเคชัน
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      # 6. Deploy ไปยัง Cloud Run: นำ "กล่อง" ที่สร้างเสร็จไปติดตั้งที่เครื่องจักร
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated
            --set-env-vars="HF_TOKEN=${{ secrets.HF_TOKEN }}" # <-- เพิ่มบรรทัดนี้เข้ามา